<?xml version="1.0" encoding="UTF-8"?>
<beans  xmlns:task="http://www.springframework.org/schema/task"
	xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/task
http://www.springframework.org/schema/task/spring-task-3.1.xsd
http://www.springframework.org/schema/aop 
http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
http://www.springframework.org/schema/tx 
http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
http://www.springframework.org/schema/mvc 
http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
<!-- 自动扫描 -->
<context:component-scan base-package="com.slloan"/>

<!-- 采用注释方式配置bean -->
<context:annotation-config/>
<mvc:annotation-driven/>
<!-- <mvc:default-servlet-handler/> -->
<!-- 引用属性文件 -->
<context:property-placeholder location="classpath:config.properties" ignore-unresolvable="true"/>
<import resource="spring-mvc.xml"/>
<import resource="spring-config.xml"/>
<!-- <mvc:resources location="/WEB-INF/js/" mapping="/js/**"/> -->
<!-- <mvc:resources location="/WEB-INF/css/" mapping="/css/**"/> -->

<!-- <bean id="encrypPropertyConfigurer" class="procuten.tarent.text.Util.EncryptablePropertyPlaceholderConfigurer">
	<property name="locations">
		<list>
			<value>classpath:config.properties</value>
		</list>
	</property>
</bean>  -->
<!-- <bean class="procuten.tarent.text.action.ExceptionHandler"></bean> -->
<!-- 配置dbcp数源源和c3p0数据库连接池 -->
<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
	<property name="driverClass" value="${jdbc.driverClassName}"/>
	<property name="jdbcUrl" value="${jdbc.url}"/>
	<property name="user" value="${jdbc.username}"/>
	<property name="password" value="${jdbc.password}"/>
	<!-- 连接池中保留最小连接数3 -->
	<property name="minPoolSize" value="${c3p0.minPoolSize}"/>
	<property name="maxPoolSize" value="${c3p0.maxPoolSize}"/>
	<property name="initialPoolSize" value="${c3p0.initialPoolSize}"/>
	<property name="maxIdleTime" value="${c3p0.maxIdleTime}"/>
	<property name="acquireIncrement" value="${c3p0.acquireIncrement}"/>
	<property name="idleConnectionTestPeriod" value="${c3p0.idleConnectionTestPeriod}"/>
	<property name="acquireRetryAttempts" value="${c3p0.acquireRetryAttempts}"/>
	<property name="acquireRetryDelay" value="${c3p0.acquireRetryDelay}"/>
	<property name="numHelperThreads" value="${c3p0.numHelperThreads}"/>
	<property name="breakAfterAcquireFailure" value="${c3p0.breakAfterAcquireFailure}"/>
	<property name="testConnectionOnCheckout" value="${c3p0.testConnectionOnCheckout}"/>
	<property name="maxStatements" value="${c3p0.maxStatements}"/>
	<property name="maxStatementsPerConnection" value="${c3p0.maxStatementsPerConnection}"/>
</bean>
<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	<property name="dataSource" ref="dataSource"/>
	<property name="configLocation" value="classpath:mybatis.xml"/>
	<property name="mapperLocations" value="classpath*:com/slloan/mapper/*.xml"/>
</bean>
<!-- 创建一个事物 -->
<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	<property name="dataSource" ref="dataSource"/>
</bean>
<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
	<tx:attributes>
		<tx:method name="add*" propagation="REQUIRED" />  
            <tx:method name="append*" propagation="REQUIRED" />  
            <tx:method name="insert*" propagation="REQUIRED" />  
            <tx:method name="save*" propagation="REQUIRED" />  
            <tx:method name="update*" propagation="REQUIRED" />  
            <tx:method name="modify*" propagation="REQUIRED" />  
            <tx:method name="edit*" propagation="REQUIRED" />  
            <tx:method name="delete*" propagation="REQUIRED" />  
            <tx:method name="remove*" propagation="REQUIRED" />  
            <tx:method name="repair" propagation="REQUIRED" />  
            <tx:method name="delAndRepair" propagation="REQUIRED" />  
            <tx:method name="get*" propagation="SUPPORTS" />  
            <tx:method name="find*" propagation="SUPPORTS" />  
            <tx:method name="load*" propagation="SUPPORTS" />  
            <tx:method name="search*" propagation="SUPPORTS" />  
            <tx:method name="datagrid*" propagation="SUPPORTS" />  
            <tx:method name="*" propagation="SUPPORTS" /> 
	</tx:attributes>
</tx:advice>
<aop:config>
	<aop:pointcut expression="execution(* com.slloan.slloan..*.*(..))" id="transactionPointcut"/>
	<aop:advisor advice-ref="transactionAdvice" pointcut-ref="transactionPointcut"/>
</aop:config>

<!-- <aop:config> -->
<!-- 	<aop:pointcut expression="execution(* procuten.tarent.text..*.*(..))" id="transactionPointcut"/> -->
<!-- 	<aop:advisor advice-ref="transactionAdvice" pointcut-ref="transactionPointcut"/> -->
<!-- </aop:config> -->

<!-- 以下是当实现每次请求都返回json格式数据时配置 -->
	<!-- json数据转换器。将请求对象与返回值转换程json格式 与POJO对象映射 -->
<!-- 	<bean id="mappingjacksonHttpMessageConverter" -->
<!-- 		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"> -->
<!-- 		<property name="supportedMediaTypes"> -->
<!-- 			<list> -->
<!-- 				<value>text/html;charset=UTF-8</value> -->
<!-- 						<value>application/json;charset=UTF-8</value> -->
<!-- 			</list> -->
<!-- 		</property> -->
<!-- 	</bean>  -->
<!-- 	<bean -->
<!-- 		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"> -->
<!-- 		<property name="messageConverters"> -->
<!-- 			<list> -->
<!-- 				<ref bean="mappingjacksonHttpMessageConverter" /> -->
<!-- 			</list> -->
<!-- 		</property> -->
<!-- 	</bean> -->

<bean id="stringConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
	    <property name="supportedMediaTypes">
		    <list>
		    	<value>application/json;charset=UTF-8</value>
		    </list>
	    </property>
    </bean>
    
<!--     输出对象转JSON支持 -->
    <bean id="jsonConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	    <property name="supportedMediaTypes">
		    <list>
		        <value>text/html;charset=UTF-8</value>
		    </list>
	    </property>
    </bean>

<!-- 应设dao -->
<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	<property name="basePackage" value="com.slloan.dao"/>
	<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
</bean>
<!-- <import resource="dubbo-provider.xml"/> -->
<!-- 视图返回结果 -->
<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>  
    <property name="contentType" value="text/html"/>  
    <property name="prefix" value="/WEB-INF/jsp/"/>  
    <property name="suffix" value=".html"/>
</bean>

</beans>
 