<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.slloan.dao.RoleAddDao">
	<resultMap type="com.slloan.entity.AddRole" id="roleaadddao">
<!-- 			<result column="id" property="id" /> -->
		<result column="rolename" property="roleName" />
		<result column="description" property="descriPtion" />
		<result column="note" property="note" />
		<result column="createdate" property="createDate" />
		<result column="belongs_city" property="belongs_City" />
		<result column="configuration" property="configuration"/>
		<result column="updatedate" property="updatedate"/>
		<result column="parentid" property="parentid"/>
<!-- 		<association property="userid"  -->
<!-- 			javaType="com.slloan.entity.UserLogin"> -->
<!-- 			<id column="id" property="id" jdbcType="INTEGER" /> -->
<!-- 			<result column="username" property="userName" jdbcType="VARCHAR" /> -->
<!-- 		<result column="password" property="passWord" jdbcType="VARCHAR"/> -->
<!-- 		<result column="employeeis_name" property="employeeis_Name" jdbcType="VARCHAR"/> -->
<!-- 		<result column="distribution_role" property="distribution_Role" jdbcType="VARCHAR"/> -->
<!-- 		<result column="belongs_city" property="belongs_City" jdbcType="VARCHAR"/> -->
<!-- 		<result column="note" property="note" jdbcType="VARCHAR"/> -->
<!-- 		<result column="r_id" property="r_id" jdbcType="VARCHAR"/> -->
<!-- 		<result column="create_date" property="create_Date" jdbcType="VARCHAR"/> -->
<!-- 		<result column="updatedate" property="updateDate" jdbcType="VARCHAR"/> -->
<!-- 		<result column="spare" property="spare" jdbcType="VARCHAR"/> -->
<!-- 		</association> -->
	</resultMap>
	<!-- 城市经理查 -->
	<select id="getRolePage" resultType="Map" resultMap="roleaadddao">
		select DISTINCT a.id,a.parentid,a.rolename,a.createdate,a.id from add_role a , user_login b where 
		a.parentid = b.r_id and b.r_id=#{parentid} and b.username= #{username} ORDER BY a.id desc
			<if test="page!=null and limit!=null">
				limit #{page},#{limit} 
			</if>
	</select>
	
	<!--系统管理员查看  -->
	<select id="getRolePage2" resultType="Map" resultMap="roleaadddao">
		select id,rolename,createdate 
			from add_role  ORDER BY id desc
			<if test="page!=null and limit!=null">
				limit #{page},#{limit} 
			</if>
	</select>
	
	<!-- 查询用户总记录数 -->
	<select id="getRoleCount"  resultType="Integer">
     	 SELECT COUNT(*) FROM add_role 
     </select>
     <select id="getRoleCountCityManager"  resultType="Integer">
     	 SELECT COUNT(*) FROM add_role  where parentid=#{parentid}
     </select>
	
	<select id="selectRoleId" parameterType="java.lang.String" resultType="com.slloan.entity.AddRole">
		select * from add_role where rolename = #{rolename}
	</select>
	<insert id="addRoleUser" parameterType="com.slloan.entity.AddRole"  useGeneratedKeys="true" keyProperty="id">
		insert into add_role(rolename,description,note,createdate,belongs_city,configuration,parentid)
		 values(#{roleName},#{descriPtion},#{belongs_City},#{note},#{configuration},#{createDate},#{parentid})
	</insert>
	<!-- 批量删除 -->
	 <delete id="batchDeletes" parameterType="java.util.List">
            DELETE FROM add_role where id in
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">   
            #{item}   
         </foreach>
    </delete>
    
    <!-- 修改查询 -->
    <select id="updateselectId" parameterType="Integer"
		resultType="com.slloan.entity.AddRole">
		select id,rolename,descriPtion,belongs_city,note,createDate,configuration from add_role  where id=#{id}
<!-- 		SELECT * FROM add_role r LEFT JOIN permission p on(r.id = p.r_id) where  r.id=#{id} -->
	</select>
	
	<!-- 修改 -->
	<update id="updateRole" parameterType="com.slloan.entity.AddRole">
		update add_role set roleName = #{roleName},
		descriPtion=#{descriPtion},belongs_city=#{belongs_City},
		note=#{note},configuration=#{configuration},updatedate = #{updatedate} WHERE id = #{id}
	</update>
	
	<!-- 根据角色得到所属城市还有角色 -->
	<select id="accordingtoroleCity" parameterType="map" resultMap="roleaadddao">
<!-- 		select roleName,belongs_City,id from add_role order by   rolename=#{rolename} desc -->
		select belongs_City from add_role 
		<where>
			<if test="id !='' and id !=null">id= #{id}</if>
		</where>

	</select>
	 
	 
	 <select id="find" parameterType="map" resultType="com.slloan.entity.AddRole">
	 		select id,rolename,belongs_city,configuration from add_role 
	 		<trim prefix="where" prefixOverrides="and|or">
	 		<if test="id !=null and id !=''"> and id =#{id}</if>
	 		<if test="belongscity !=null and belongscity !=''"> and belongs_city=#{belongscity}</if>
			<if test="rolename !=null and rolename !=''">and rolename =#{rolename}</if>
	 		</trim>
	 </select> 
	 <!-- 查询角色 -->
	 <select id="selectByRId" parameterType="map" resultType="com.slloan.entity.AddRole">
	 		select * from add_role  where roleName =#{roleName} and belongs_City =#{belongs_City}
<!-- 	 		<trim prefix="where" prefixOverrides="and|or"> -->
<!-- 	 		<if test="rolename !=null and rolename !=''"> and roleName =#{roleName}</if> -->
<!-- 					<if test="belongs_city !=null and belongs_city !=''">and belongs_City =#{belongs_City}</if> -->
<!-- 	 		</trim> -->
	 </select> 
	  <!-- 查询角色传到用户 -->
	 <select id="list" resultType="com.slloan.entity.AddRole">
	 		select rolename,id from add_role where not id=1
<!-- 	 		<trim prefix="where" prefixOverrides="and|or"> -->
<!-- 	 		<if test="rolename !=null and rolename !=''"> and roleName =#{roleName}</if> -->
<!-- 					<if test="belongs_city !=null and belongs_city !=''">and belongs_City =#{belongs_City}</if> -->
<!-- 	 		</trim> -->
	 </select> 
	 
	  <!-- 根据ID查询 -->
	 <select id="selectAddRoleById" parameterType="int" resultType="com.slloan.entity.AddRole">
	 	select id,rolename,descriPtion,belongs_city,note,createDate from add_role  where id=#{id}
	 </select>
	 
	 <!-- 更新角色保存 -->
	 <update id="updateaddAddRole" parameterType="com.slloan.entity.AddRole">
	 	update add_role set roleName = #{roleName},
		descriPtion=#{descriPtion},belongs_city=#{belongs_City}
		note=#{note},createDate = #{createDate} WHERE id = #{id}
	 </update>
	 
	 <select id="selectroleRoleName" resultType="Map" resultMap="roleaadddao">
	 	SELECT rolename,belongs_City FROM add_role WHERE rolename=#{rolename} and belongs_City=#{belongs_City}
	 </select>
	 
	 <select id="getselectByid"  parameterType="String" resultType="com.slloan.entity.AddRole">
	 	select DISTINCT a.id,a.rolename,a.belongs_city from add_role a , user_login b 
	 	where  b.r_id=#{0}  and  a.belongs_city=#{1} and b.belongs_city=#{2}  ORDER BY a.id desc
	 </select>
	 
	 <select id="getselectByid2"  parameterType="String" resultType="com.slloan.entity.AddRole">
	 	select a.rolename,a.belongs_city from add_role a , user_login b 
	 	where a.id = b.r_id and b.r_id=#{parentid} ORDER BY a.id desc
	 </select>
	 
	  <update id="updateRoleCity"  parameterType="Map">
	 	update add_role set rolename =#{rolename},belongs_city=#{city} where id=#{id}
	 </update>
</mapper>